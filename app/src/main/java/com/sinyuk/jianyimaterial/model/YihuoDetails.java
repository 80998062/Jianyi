package com.sinyuk.jianyimaterial.model;

import com.sinyuk.jianyimaterial.greendao.dao.DaoSession;
import de.greenrobot.dao.DaoException;

import com.sinyuk.jianyimaterial.greendao.dao.UserDao;
import com.sinyuk.jianyimaterial.greendao.dao.YihuoDetailsDao;

import java.util.List;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table "YIHUO_DETAILS".
 */
public class YihuoDetails implements java.io.Serializable {

    private java.util.Date date;
    /** Not-null value. */
    private String id;
    private String name;
    private String detail;
    private String title;
    private String price;
    private String tel;
    private String sort;
    private String del;
    private String top;
    private String time;
    /** Not-null value. */
    private String uid;
    private String way;
    private String reason;
    private String viewcount;
    private String x;
    private String y;
    private String oldprice;
    private String pic;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient YihuoDetailsDao myDao;

    private User user;
    private String user__resolvedKey;


    // KEEP FIELDS - put your custom fields here
    public static final String TAG = "YihuoDetails";
    public static final String LOAD_REQUEST = "load_" + TAG;
    public static final String REFRESH_REQUEST = "refresh_" + TAG;

    private List<Pics> pics;

    public static class Pics {
        private String id;
        private String pic;
        private String gid;
        private String del;

        public String getId() {
            return id;
        }

        public String getPic() {
            return pic;
        }

        public String getGid() {
            return gid;
        }

        public String getDel() {
            return del;
        }


        public Pics() {
        }

    }
    // KEEP FIELDS END

    public YihuoDetails() {
    }

    public YihuoDetails(String id) {
        this.id = id;
    }

    public YihuoDetails(java.util.Date date, String id, String name, String detail, String title, String price, String tel, String sort, String del, String top, String time, String uid, String way, String reason, String viewcount, String x, String y, String oldprice, String pic) {
        this.date = date;
        this.id = id;
        this.name = name;
        this.detail = detail;
        this.title = title;
        this.price = price;
        this.tel = tel;
        this.sort = sort;
        this.del = del;
        this.top = top;
        this.time = time;
        this.uid = uid;
        this.way = way;
        this.reason = reason;
        this.viewcount = viewcount;
        this.x = x;
        this.y = y;
        this.oldprice = oldprice;
        this.pic = pic;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getYihuoDetailsDao() : null;
    }

    public java.util.Date getDate() {
        return date;
    }

    public void setDate(java.util.Date date) {
        this.date = date;
    }

    /** Not-null value. */
    public String getId() {
        return id;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDetail() {
        return detail;
    }

    public void setDetail(String detail) {
        this.detail = detail;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getPrice() {
        return price;
    }

    public void setPrice(String price) {
        this.price = price;
    }

    public String getTel() {
        return tel;
    }

    public void setTel(String tel) {
        this.tel = tel;
    }

    public String getSort() {
        return sort;
    }

    public void setSort(String sort) {
        this.sort = sort;
    }

    public String getDel() {
        return del;
    }

    public void setDel(String del) {
        this.del = del;
    }

    public String getTop() {
        return top;
    }

    public void setTop(String top) {
        this.top = top;
    }

    public String getTime() {
        return time;
    }

    public void setTime(String time) {
        this.time = time;
    }

    /** Not-null value. */
    public String getUid() {
        return uid;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setUid(String uid) {
        this.uid = uid;
    }

    public String getWay() {
        return way;
    }

    public void setWay(String way) {
        this.way = way;
    }

    public String getReason() {
        return reason;
    }

    public void setReason(String reason) {
        this.reason = reason;
    }

    public String getViewcount() {
        return viewcount;
    }

    public void setViewcount(String viewcount) {
        this.viewcount = viewcount;
    }

    public String getX() {
        return x;
    }

    public void setX(String x) {
        this.x = x;
    }

    public String getY() {
        return y;
    }

    public void setY(String y) {
        this.y = y;
    }

    public String getOldprice() {
        return oldprice;
    }

    public void setOldprice(String oldprice) {
        this.oldprice = oldprice;
    }

    public String getPic() {
        return pic;
    }

    public void setPic(String pic) {
        this.pic = pic;
    }

    /** To-one relationship, resolved on first access. */
    public User getUser() {
        String __key = this.uid;
        if (user__resolvedKey == null || user__resolvedKey != __key) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            UserDao targetDao = daoSession.getUserDao();
            User userNew = targetDao.load(__key);
            synchronized (this) {
                user = userNew;
            	user__resolvedKey = __key;
            }
        }
        return user;
    }

    public void setUser(User user) {
        if (user == null) {
            throw new DaoException("To-one property 'uid' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.user = user;
            uid = user.getId();
            user__resolvedKey = uid;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    public List<Pics> getPics() {
        return pics;
    }
    // KEEP METHODS END

}
